# 基于默认 nginx.conf，加入 /mcp 路由使用自定义模块
worker_processes  1;

error_log  logs/error.log  warn;
pid        logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       8080;
        server_name  localhost;

        # 默认静态
        location / {
            root   html;
            index  index.html index.htm;
        }

        # 自定义模块路由：仅 /mcp 走 ngx_http_mcp_module 内容处理
        location /mcp {
            mcp_enable on;              # 启用模块
            mcp_limit_method ping 10;      # 指定需要匹配和限流逻辑的方法名 (示例: ping)
            mcp_limit_method initialize 20;      # 指定需要匹配和限流逻辑的方法名 (示例: initialize)
            # 现在支持所有 HTTP 方法(GET/POST/PUT/PATCH/DELETE 等)：
            # - 对有 JSON 且包含 "method" 字段的请求，以其值匹配限流
            # - 否则使用 HTTP 动词作为逻辑方法名参与限流
        }

        # 健康检查
        location /healthz {
            return 200 "ok\n";
        }

        error_page  500 502 503 504  /50x.html;
        location = /50x.html {
            root html;
        }
    }
}
